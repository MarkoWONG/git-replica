#!/bin/dash
# Written by Marko Wong (z5309371)
# Girt-checkout switches branches.

# Error check: There must be an existing .girt repository
if [ -d .girt ]
then 
    :
else 
    echo "girt-checkout: error: girt repository directory .girt not found"
    exit 1;
fi

# Error check: There must be an existing commit
if [ -d .girt/commit_0 ]
then
    :
else
    echo "girt-checkout: error: this command can not be run until after the first commit"
    exit 1;
fi

# Extract the current working branch(cwb)
cwb=$(cat .girt/branches/current_working_branch.txt);

# Error check: There can be only one agrument
if [ $# -eq 1 ]
then
    # Check if argument is a valid branch
    if [ -d .girt/branches/"$1" ]
    then
        # Check if already on cwb
        if [ "$1" = "$cwb" ]
        then
            echo "Already on '"$1"'";
            exit 1;
        fi

    else 
        echo "girt-checkout: error: unknown branch '"$1"'";
        exit 1;
    fi
else
    echo "usage: girt-checkout <branch>"
    exit 1;
fi

# Copy all files in cwd to cwb and new_b (saving work done on the branch)
for current_files in ./*
do
    if [ -f "$current_files" ]
    then
        current_file_name=$(basename "$branch_files");
        #echo "copying "$current_files" to .girt/branches/"$cwb"/"$current_file_name"";
        cp "$current_files" .girt/branches/"$cwb"/"$current_file_name";

        cp "$current_files" .girt/branches/"$1"/"$current_file_name";
    fi
done

# Update cwb latest commit
cd .girt;
for commit_file in *
do
    #echo "commit file is "$commit_file""
    if [ -d "$commit_file" ] && echo "$commit_file" | egrep -q '^commit_.*'
    then 
        commit_owner=$(cat "$commit_file"/commit_owner.txt);
        #echo "commit owner is "$commit_owner"";
        if [ "$commit_owner" = "$cwb" ]
        then 
            commit_no=$(echo "$commit_file" | sed 's/^commit_/''/g') 
            echo "$commit_no" > "branches/"$cwb"/latest_commit.txt";
        fi
    fi
done
cd ..;

#copies all files in switching to branch to cwd
for b_file in .girt/branches/"$1"/*
do
     b_file_name=$(basename "$b_file");
    if [ -f "$b_file" ] && [ "$b_file_name" != "latest_commit.txt" ] && [ "$b_file_name" != "commit_owner.txt" ] 
    then
        cp "$b_file" ./"$b_file_name";
    fi
done

# fetch the latest commit number for the branch we are switching from
latest_cwb_commit_no=$(cat .girt/branches/"$cwb"/latest_commit.txt);

# fetch the latest commit number for the branch we are switching to
latest_new_b_commit_no=$(cat .girt/branches/"$1"/latest_commit.txt);

# if branches contain different commits then
if [ "$latest_new_b_commit_no" -ne "$latest_cwb_commit_no" ]
then 
    #echo "branches are different "$cwb"="$latest_cwb_commit_no" vs "$1"="$latest_new_b_commit_no""
    for new_b_file in .girt/commit_"$latest_new_b_commit_no"/*
    do
        #echo "new_b_file is "$new_b_file""
        new_b_file_name=$(basename "$new_b_file");
        if [ -f "$new_b_file" ] && [ "$new_b_file_name" != "commit_message.txt" ] && [ "$new_b_file_name" != "commit_owner.txt" ] 
        then 
            #overwrite file with new_b_commit for cwd
            #echo ""$new_b_file" --> ./"$new_b_file_name""; 
            cp "$new_b_file" ./"$new_b_file_name"
            
            ##overwrite file with new_b_commit for index
            cp "$new_b_file" .girt/index/"$new_b_file_name"
        fi 
    done

    #remove files that are in cwb commit but not in new_b_commit
    for cwb_file in .girt/commit_"$latest_cwb_commit_no"/*
    do 
        cwb_file_name=$(basename "$cwb_file");
        if [ -f .girt/commit_"$latest_new_b_commit_no"/"$cwb_file_name" ]
        then 
            :
        elif [ -f "$cwb_file" ]
        then
            #echo "removed ./"$cwb_file_name"";
            rm ./"$cwb_file_name";
            rm .girt/branches/"$1"/"$cwb_file_name";
            if [ -f .girt/index/"$new_b_file_name" ]
            then
                rm .girt/index/"$new_b_file_name";
            fi
        fi 
    done
fi

echo "$1" > .girt/branches/current_working_branch.txt;
echo "Switched to branch '"$1"'";
exit 0;