#!/bin/dash
# Written By Marko Wong (z5309371)
# Girt-status shows the status of files in the current directory, the index, 
# and the repository.

# Error check: There must be an existing .girt repository
if [ -d .girt ]
then 
    :
else 
    echo "girt-status: error: girt repository directory .girt not found"
    exit 1;
fi

# () to pass the output into sort
(

# Extract the current working branch(cwb)
cwb=$(cat .girt/branches/current_working_branch.txt);

# Fetch the lastest commit in the cwb
if [ -f ".girt/branches/"$cwb"/latest_commit.txt" ]
then
    latest_commit_no=$(cat .girt/branches/"$cwb"/latest_commit.txt);
else 
    # Which is not possible until the first checkout so just fetch the latest commit in cwd
    commit_no=0;
    while [ -d ".girt/commit_"$commit_no"" ] 
    do
        commit_no=$(( $commit_no + 1 ));
    done

    latest_commit_no=$(( $commit_no - 1 ));
fi
# Check the status of every file in cwd
for file in *
do
    if [ -f "$file" ] #&& echo "$file" | egrep -qv '^girt-.*'
    then
        if [ -f .girt/index/"$file" ] && [ -f .girt/commit_"$latest_commit_no"/"$file" ]
        then
            # Keeps track of which diff is detected, 0 for detected and 1 for undetected
            index_diff_repo=1;
            cwd_diff_repo=1;
            cwd_diff_index=1;

            # checking for difference between index and latest commit
            diff -s ".girt/index/"$file"" ".girt/commit_"$latest_commit_no"/"$file"" >/dev/null 2>/dev/null;
            if [ $? -ne 0 ]
            then 
                index_diff_repo=0;
            fi

            # checking for difference between cwd and latest commit
            diff -s "./"$file"" ".girt/commit_"$latest_commit_no"/"$file"" >/dev/null 2>/dev/null;
            if [ $? -ne 0 ] 
            then 
                cwd_diff_repo=0; 
            fi

            # checking for difference between index and cwd
            diff -s "./"$file"" ".girt/index/"$file"" >/dev/null 2>/dev/null;
            if [ $? -ne 0 ]
            then 
                cwd_diff_index=0; 
            fi

            # Print the status of files based on the differences detected
            if [ "$index_diff_repo" -eq 0 ] && 
            [ "$cwd_diff_repo" -eq 0 ] && 
            [ "$cwd_diff_index" -eq 0 ]
            then 
                echo ""$file" - file changed, different changes staged for commit";

            elif [ "$index_diff_repo" -eq 0 ] && [ "$cwd_diff_repo" -eq 0 ]
            then
                echo ""$file" - file changed, changes staged for commit";
                
            elif [ "$cwd_diff_repo" -eq 0 ] && [ "$cwd_diff_index" -eq 0 ]
            then 
                echo ""$file" - file changed, changes not staged for commit";
            elif [ "$cwd_diff_index" -eq 0 ]
            then 
                echo ""$file" - file changed, different changes staged for commit";
            else
                echo ""$file" - same as repo";
            fi

        elif [ -f .girt/index/"$file" ]
        then 
            # checking for difference between index and cwd
            diff -s "./"$file"" ".girt/index/"$file"" >/dev/null 2>/dev/null;
            if [ $? -ne 0 ] 
            then 
                echo ""$file" - added to index, file changed";
            else
                echo ""$file" - added to index";
            fi
        elif [ -f .girt/commit_"$latest_commit_no"/"$file" ]
        then 
            echo ""$file" - untracked";
        else
            echo ""$file" - untracked";
        fi
    fi
done 

# Check files that are not in cwd but in index
for index_file in .girt/index/*
do
    index_file_name=$(basename "$index_file");
    if [ -f ./"$index_file_name" ]
    then
        :
    else
        if [ -f .girt/index/"$index_file_name" ] && 
        [ -f .girt/commit_"$latest_commit_no"/"$index_file_name" ]
        then
            # checking for difference between index and latest commit
            diff -s ".girt/index/"$index_file_name"" ".girt/commit_"$latest_commit_no"/"$index_file_name"" >/dev/null 2>/dev/null;
            if [ $? -ne 0 ]
            then 
                echo ""$index_file_name" - file deleted, different changes staged for commit";
            else
                echo ""$index_file_name" - file deleted";
            fi
        elif [ -f .girt/index/"$index_file_name" ]
        then
            echo ""$index_file_name" - added to index, file deleted";
        fi
    fi
done 

# Check files that are only in the latest commit
for commit_file in .girt/commit_"$latest_commit_no"/*
do
    commit_file_name=$(basename "$commit_file");
    if [ -f ./"$commit_file_name" ] || 
    [ -f .girt/index/"$commit_file_name" ] || 
    [ "$commit_file_name" = "commit_message.txt" ] || 
    [ "$commit_file_name" = "commit_owner.txt" ] 
    then
        :
    else
        if [ -f .girt/commit_"$latest_commit_no"/"$commit_file_name" ]
        then
            echo ""$commit_file_name" - deleted";
        fi
    fi
done 
)|sort;
exit 0;
